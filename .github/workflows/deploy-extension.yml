name: Deploy Extension

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  # Step 1: Pack Extension for Chromium
  packChromium:
    runs-on: ubuntu-latest
    outputs:
      zip_path: ${{ steps.pack.outputs.zipFilePath }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Move manifest to root
        run: mv platform/chromium/manifest.json .
      
      - name: Rename Chromium manifest
        run: mv platform/firefox/manifest.json manifest.json.firefox

      - name: Build Extension
        id: pack
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: '.'
          zipFilePath: 'build/extension-chromium.zip'

      - name: Upload Packed Extension
        uses: actions/upload-artifact@v4
        with:
          name: extension-chromium
          path: build/extension-chromium.zip

  # Step 1.1.1: Fetch Google Access Token
  fetchGToken:
    runs-on: ubuntu-latest
    needs: packChromium
    outputs:
      access_token_path: google-access-token
    steps:
      - id: fetchToken
        uses: cardinalby/google-api-fetch-token-action@v1
        with:
          clientId: ${{ secrets.G_CLIENT_ID }}
          clientSecret: ${{ secrets.G_CLIENT_SECRET }}
          refreshToken: ${{ secrets.G_REFRESH_TOKEN }}

      - name: Save access token
        run: |
          echo "${{ steps.fetchToken.outputs.accessToken }}" > access_token.txt
    
      - name: Upload token as artifact
        uses: actions/upload-artifact@v4
        with:
          name: google-access-token
          path: access_token.txt

  # Step 1.1.2: Upload Extension to the Chrome Web Store
  uploadGoogle:
    runs-on: ubuntu-latest
    needs: [packChromium, fetchGToken]
    steps:
      - name: Download token artifact
        uses: actions/download-artifact@v4
        with:
          name: google-access-token

      - name: Download extension artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-chromium

      - name: Read access token
        id: read-token
        run: echo "ACCESS_TOKEN=$(cat access_token.txt)" >> $GITHUB_ENV

      - name: Upload to Chrome Web Store
        uses: cardinalby/webext-buildtools-chrome-webstore-action@v1
        with:
          zipFilePath: 'extension-chromium.zip'
          extensionId: 'ibnifmdhbaknbkgldmbnebeidephchno'
          apiAccessToken: ${{ env.ACCESS_TOKEN }}

  # Step 1.1.3: Publish Extension to the Chrome Web Store
  publishGoogle:
    runs-on: ubuntu-latest
    needs: uploadGoogle
    steps:
      - name: Download token artifact
        uses: actions/download-artifact@v4
        with:
          name: google-access-token

      - name: Read access token
        id: read-token
        run: echo "ACCESS_TOKEN=$(cat access_token.txt)" >> $GITHUB_ENV

      - name: Publish to Chrome Web Store
        uses: cardinalby/webext-buildtools-chrome-webstore-publish-action@v1
        with:
          extensionId: 'ibnifmdhbaknbkgldmbnebeidephchno'
          apiAccessToken: ${{ env.ACCESS_TOKEN }}
  
  # Step 1.2.1: Upload and Publish to the Microsoft Edge Add-ons
  uploadAndPublishEdge:
    runs-on: ubuntu-latest
    needs: packChromium
    steps:
      - name: Download extension artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-chromium
      
      - name: Publish to Microsoft Edge Add-ons
        uses: wdzeng/edge-addon@v2
        with:
          zip-path: 'extension-chromium.zip'
          product-id: 'e29a4e1d-b5b6-4885-8b9a-1a6fa1429502'
          api-key: ${{ secrets.EDGE_API_KEY }}
          client-id: ${{ secrets.EDGE_CLIENT_ID }}

  # Step 2: Pack Extension for Firefox
  packFirefox:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Move manifest to root
        run: mv platform/firefox/manifest.json .
      
      - name: Rename Chromium manifest
        run: mv platform/chromium/manifest.json manifest.json.chromium

      - name: Build Firefox Extension
        run: chmod +x build.sh && ./build.sh firefox

      - name: Rename Firefox zip to standard name
        run: mv build/DuoExplained_*.firefox.zip build/extension-firefox.zip

      - name: Upload Packed Extension
        uses: actions/upload-artifact@v4
        with:
          name: extension-firefox
          path: build/extension-firefox.zip
  
  # Step 2.1: Upload and Publish to the Microsoft Edge Add-ons
  uploadAndPublishFirefox:
    runs-on: ubuntu-latest
    needs: packFirefox
    steps:
      - name: Download extension artifact
        uses: actions/download-artifact@v4
        with:
          name: extension-firefox
      
      - name: Publish to Firefox Add-ons
        uses: wdzeng/firefox-addon@v1
        with:
          addon-guid: '{2acab3d4-f546-4e70-b325-4f85c9e19093}'
          xpi-path: extension-firefox.zip
          self-hosted: false
          jwt-issuer: ${{ secrets.FIREFOX_JWT_ISSUER }}
          jwt-secret: ${{ secrets.FIREFOX_JWT_SECRET }}